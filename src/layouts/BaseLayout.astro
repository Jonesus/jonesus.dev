---
import "~src/globals.css";
import { ClientRouter } from "astro:transitions";

import Github from "~src/assets/logos/github.svg";
import Linkedin from "~src/assets/logos/linkedin.svg";

interface Props {
    title?: string | undefined;
    favicon?: string | undefined;
    frontmatter?: {
        favicon?: string;
    };
}

const { favicon, title, frontmatter } = Astro.props;

const currentFavicon = favicon ?? frontmatter?.favicon ?? "üßë‚Äçüíª";
const fullTitle = title ? `${title}‚ÄÇ|‚ÄÇjonesus.dev` : "jonesus.dev";
---

<!doctype html>
<html lang="en" transition:name="root" transition:animate="none">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link
            rel="icon"
            href=`data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%2210 0 100 100%22><text y=%22.90em%22 font-size=%2290%22>${currentFavicon}</text></svg>`
        />
        <meta name="generator" content={Astro.generator} />
        <title>{fullTitle}</title>
        <ClientRouter />
    </head>
    <body>
        <nav>
            <a href="/" aria-label="home">jonesus.dev</a>
            <ul>
                <li><a href="/projects">Projects</a></li>
                <li><a href="/blog">Blog</a></li>
                <li><a href="/contact">Contact</a></li>
            </ul>
        </nav>

        <hr />

        <main>
            <slot />
        </main>

        <hr />

        <footer>
            <a href="https://github.com/Jonesus" aria-label="My GitHub profile">
                <Github width="32" height="32" />
            </a>

            <a
                href="https://www.linkedin.com/in/joonas-palosuo/"
                aria-label="My LinkedIn profile"
            >
                <Linkedin width="32" height="32" />
            </a>

            <p><em>Cookies are for monsters</em></p>
        </footer>

        <script is:inline>
            function placeholder() {
                // for every <img data-lqip="data:..."> it sets the LQIP as a background image,
                // blurs it visually and removes it once the real image has fully loaded.
                const imgs = document.querySelectorAll("img[data-lqip]");
                imgs.forEach((img) => {
                    const lqip = img.getAttribute("data-lqip");
                    if (!lqip) return;

                    const wrapper = document.createElement("span");
                    wrapper.classList.add("lqip", "blur");
                    wrapper.style.paddingBottom = img.style.marginBottom;
                    img.parentNode.insertBefore(wrapper, img);
                    wrapper.appendChild(img);

                    // apply wrapper styles via inline style for immediate effect
                    img.classList.add("lqip");
                    img.style.backgroundImage = `url("${lqip}")`;

                    function removePlaceholder() {
                        wrapper.classList.remove("blur");
                        // remove background after a short delay to allow transition to finish
                        setTimeout(() => {
                            img.style.backgroundImage = "";
                            img.classList.remove("lqip");
                            wrapper.replaceWith(img);
                        }, 250);
                    }

                    if (img.complete && img.naturalWidth !== 0) {
                        // image already loaded (cache); remove placeholder immediately
                        removePlaceholder();
                    } else {
                        img.addEventListener("load", removePlaceholder, {
                            once: true,
                        });
                        img.addEventListener("error", () => {}, { once: true });
                    }
                });
            }
            placeholder();
            document.addEventListener("astro:after-swap", placeholder);
        </script>
    </body>
</html>

<style>
    nav {
        display: flex;
        justify-content: space-between;
    }

    nav > a {
        margin-right: 1em;
        font-size: 1.35rem;
        font-weight: 800;
        color: unset;
        text-decoration: unset;
    }
    nav > a:hover {
        text-decoration: underline;
    }

    ul {
        padding-inline-start: 0;
        display: flex;
        gap: 2em;
    }
    li {
        list-style: none;
        padding-inline-start: unset;
        line-height: 1;
    }

    footer {
        display: flex;
        align-items: center;
        gap: 2em;
    }
    footer a {
        color: unset;
        border: none;
    }
    footer p {
        margin-left: auto;
    }

    :global(img.lqip) {
        color: transparent;
        background-repeat: no-repeat;
        background-position: center;
        background-size: cover;
    }
    :global(span.lqip) {
        display: block;
        position: relative;
        height: fit-content;
        overflow: hidden;
    }
    :global(span.lqip:after) {
        content: "";
        position: absolute;
        inset: var(--line-width);
        transition: backdrop-filter 300ms ease;
        backdrop-filter: blur(20px) opacity(0);
    }
    :global(span.lqip.blur:after) {
        backdrop-filter: blur(20px) opacity(1);
    }

    @media (width <=600px) {
        nav a {
            font-size: 1rem;
        }
        ul {
            gap: 1em;
        }
        footer p {
            font-size: 1rem;
        }
    }
</style>
